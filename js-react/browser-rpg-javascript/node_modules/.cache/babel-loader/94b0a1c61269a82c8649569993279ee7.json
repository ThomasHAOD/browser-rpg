{"ast":null,"code":"import _objectSpread from \"/Users/user/codeclan_work/Projects/browser-rpg/js-react/browser-rpg-javascript/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/user/codeclan_work/Projects/browser-rpg/js-react/browser-rpg-javascript/src/Game/GameContainer.js\";\nimport React, { Component, Fragment } from \"react\";\nimport StartScreenContainer from \"../Containers/StartScreenContainer\";\nimport NewCharacterContainer from \"../Containers/NewCharacterContainer\";\nimport PlayerSelectCharacterContainer from \"../Containers/PlayerSelectCharacterContainer\";\nimport BattleContainer from \"../Containers/BattleContainer\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport EndGameContainer from \"../Containers/EndGameContainer\";\nimport NewPlayerContainer from \"../Containers/NewPlayerContainer\";\nimport HomeScreenButton from \"../Components/HomeScreenButton\";\nimport CurrentPlayerCharacter from \"../Components/CurrentPlayerCharacter\";\n\nclass GameContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: [],\n      currentPlayer: {\n        name: \"\"\n      },\n      currentCharacter: null,\n      currentEnemy: {\n        alive: true\n      },\n      newCharacterSpriteID: 0,\n      createdNewPlayer: false,\n      playerIsDefending: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCurrentPlayerChange = this.handleCurrentPlayerChange.bind(this);\n    this.handleNewPlayerForm = this.handleNewPlayerForm.bind(this);\n    this.setCurrentPlayer = this.setCurrentPlayer.bind(this);\n    this.playerAttacksEnemy = this.playerAttacksEnemy.bind(this);\n    this.enemyAttacksPlayer = this.enemyAttacksPlayer.bind(this);\n    this.playerDefends = this.playerDefends.bind(this);\n    this.resetEnemy = this.resetEnemy.bind(this);\n    this.accumulateScore = this.accumulateScore.bind(this);\n    this.setCurrentHPCharacter = this.setCurrentHPCharacter.bind(this);\n    this.saveCharacter = this.saveCharacter.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const url = \"http://localhost:8080/avatars\";\n    const newCharacter = {\n      name: event.target.name.value,\n      maxHP: event.target.hp.value,\n      currentHP: event.target.hp.value,\n      power: event.target.power.value,\n      spriteID: event.target.spriteID.value,\n      alive: true,\n      score: 0,\n      player: this.state.currentPlayer._links.player.href\n    };\n    this.setState({\n      currentCharacter: newCharacter\n    });\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(newCharacter),\n      headers: headers\n    });\n  }\n\n  handleNewPlayerForm(event) {\n    event.preventDefault();\n    const url = \"http://localhost:8080/players\";\n    const newPlayer = {\n      name: event.target.name.value\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(newPlayer),\n      headers: headers\n    });\n    this.setState({\n      createdNewPlayer: true\n    });\n  }\n\n  setCurrentPlayer(index) {\n    this.setState({\n      currentPlayer: this.state.players[index]\n    });\n  }\n\n  handleCurrentPlayerChange(event) {\n    const playerIndex = event.target.value - 1;\n    console.log(playerIndex);\n    this.setState({\n      currentPlayer: this.state.players[playerIndex]\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.createdNewPlayer === true) {\n      fetch(\"http://localhost:8080/players\").then(res => res.json()).then(existingPlayers => this.setState({\n        players: existingPlayers._embedded.players\n      })).then(err => console.error);\n      this.setState({\n        createdNewPlayer: false\n      });\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/players\").then(res => res.json()).then(existingPlayers => this.setState({\n      players: existingPlayers._embedded.players\n    })).then(err => console.error);\n    fetch(\"http://localhost:8080/avatars/1\").then(res => res.json()).then(avatar => this.setState({\n      currentCharacter: avatar\n    })).then(err => console.error);\n    fetch(\"http://localhost:8080/enemies/1\").then(res => res.json()).then(enemy => this.setState({\n      currentEnemy: enemy\n    })).then(err => console.error);\n  }\n\n  playerAttacksEnemy() {\n    this.setState({\n      playerIsDefending: false\n    });\n    const power = this.state.currentCharacter.power;\n\n    if (!(this.state.currentEnemy.currentHP - power <= 0)) {\n      this.setState(prevState => {\n        const currentEnemy = _objectSpread({}, prevState.currentEnemy);\n\n        currentEnemy.currentHP -= power;\n        return {\n          currentEnemy\n        };\n      });\n    } else {\n      this.setState(prevState => {\n        const currentEnemy = _objectSpread({}, prevState.currentEnemy);\n\n        currentEnemy.alive = false;\n        return {\n          currentEnemy\n        };\n      });\n    }\n  }\n\n  resetEnemy() {\n    this.setState(prevState => {\n      const currentEnemy = _objectSpread({}, prevState.currentEnemy);\n\n      currentEnemy.currentHP = currentEnemy.maxHP;\n      currentEnemy.alive = true;\n      return {\n        currentEnemy\n      };\n    });\n  }\n\n  setCurrentHPCharacter() {\n    this.setState(prevState => {\n      const currentCharacter = _objectSpread({}, prevState.currentCharacter);\n\n      currentCharacter.currentHP = 0;\n      return {\n        currentCharacter\n      };\n    });\n  }\n\n  accumulateScore() {\n    this.setState(prevState => {\n      const currentCharacter = _objectSpread({}, prevState.currentCharacter);\n\n      currentCharacter.score += 500;\n      return {\n        currentCharacter\n      };\n    });\n  }\n\n  enemyAttacksPlayer() {\n    let power = 0;\n\n    if (this.state.currentEnemy.currentHP <= 70) {\n      power = this.state.currentEnemy.power + 30;\n    }\n\n    if (!this.state.playerIsDefending) {\n      power = this.state.currentEnemy.power;\n    } else {\n      power = this.state.currentEnemy.power - 20;\n    }\n\n    if (!(this.state.currentCharacter.currentHP - power <= 0)) {\n      this.setState(prevState => {\n        const currentCharacter = _objectSpread({}, prevState.currentCharacter);\n\n        currentCharacter.currentHP -= power;\n        return {\n          currentCharacter\n        };\n      });\n    } else {\n      this.setState(prevState => {\n        const currentCharacter = _objectSpread({}, prevState.currentCharacter);\n\n        currentCharacter.alive = false;\n        this.saveCharacter();\n        return {\n          currentCharacter\n        };\n      });\n    }\n  }\n\n  playerDefends() {\n    this.setState({\n      playerIsDefending: true\n    });\n    const power = this.state.currentCharacter.power;\n\n    if (!(this.state.currentEnemy.currentHP - (power - 30) <= 0)) {\n      this.setState(prevState => {\n        const currentEnemy = _objectSpread({}, prevState.currentEnemy);\n\n        currentEnemy.currentHP -= power - 30;\n        return {\n          currentEnemy\n        };\n      });\n    } else {\n      this.setState(prevState => {\n        const currentEnemy = _objectSpread({}, prevState.currentEnemy);\n\n        currentEnemy.alive = false;\n        this.saveCharacter();\n        return {\n          currentEnemy\n        };\n      });\n    }\n  }\n\n  saveCharacter() {\n    const url = \"http://localhost:8080/avatars\";\n    const newCharacter = this.state.currentCharacter;\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(newCharacter),\n      headers: headers\n    });\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: StartScreenContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/select-player\",\n      render: props => React.createElement(NewPlayerContainer, Object.assign({}, props, {\n        players: this.state.players,\n        currentPlayer: this.state.currentPlayer,\n        changePlayer: this.handleCurrentPlayerChange,\n        handleSubmit: this.handleNewPlayerForm,\n        handleNameChange: this.handlePlayerNameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/new-character\",\n      render: props => React.createElement(NewCharacterContainer, Object.assign({}, props, {\n        currentPlayer: this.state.currentPlayer,\n        spriteID: this.state.newCharacterSpriteID,\n        handleClick: this.handleClick,\n        handleSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/select-character-create-character\",\n      component: PlayerSelectCharacterContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/battle\",\n      render: props => React.createElement(BattleContainer, Object.assign({}, props, {\n        currentPlayer: this.state.currentPlayer,\n        currentCharacter: this.state.currentCharacter,\n        currentEnemy: this.state.currentEnemy,\n        resetEnemy: this.resetEnemy,\n        accumulateScore: this.accumulateScore,\n        setCurrentHPCharacter: this.setCurrentHPCharacter,\n        playerAttacksEnemy: this.playerAttacksEnemy,\n        enemyAttacksPlayer: this.enemyAttacksPlayer,\n        playerDefends: this.playerDefends,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      component: HomeScreenButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/endgame\",\n      render: props => React.createElement(EndGameContainer, Object.assign({}, props, {\n        currentCharacter: this.state.currentCharacter,\n        currentPlayer: this.state.currentPlayer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }), React.createElement(CurrentPlayerCharacter, {\n      currentPlayer: this.state.currentPlayer,\n      currentCharacter: this.state.currentCharacter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default GameContainer;","map":{"version":3,"sources":["/Users/user/codeclan_work/Projects/browser-rpg/js-react/browser-rpg-javascript/src/Game/GameContainer.js"],"names":["React","Component","Fragment","StartScreenContainer","NewCharacterContainer","PlayerSelectCharacterContainer","BattleContainer","BrowserRouter","Router","Route","Redirect","Switch","EndGameContainer","NewPlayerContainer","HomeScreenButton","CurrentPlayerCharacter","GameContainer","constructor","props","state","players","currentPlayer","name","currentCharacter","currentEnemy","alive","newCharacterSpriteID","createdNewPlayer","playerIsDefending","handleSubmit","bind","handleCurrentPlayerChange","handleNewPlayerForm","setCurrentPlayer","playerAttacksEnemy","enemyAttacksPlayer","playerDefends","resetEnemy","accumulateScore","setCurrentHPCharacter","saveCharacter","event","preventDefault","url","newCharacter","target","value","maxHP","hp","currentHP","power","spriteID","score","player","_links","href","setState","headers","fetch","method","body","JSON","stringify","newPlayer","index","playerIndex","console","log","componentDidUpdate","prevProps","prevState","then","res","json","existingPlayers","_embedded","err","error","componentDidMount","avatar","enemy","render","handlePlayerNameChange","handleClick"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport StartScreenContainer from \"../Containers/StartScreenContainer\";\nimport NewCharacterContainer from \"../Containers/NewCharacterContainer\";\nimport PlayerSelectCharacterContainer from \"../Containers/PlayerSelectCharacterContainer\";\nimport BattleContainer from \"../Containers/BattleContainer\";\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n\tRedirect,\n\tSwitch,\n} from \"react-router-dom\";\nimport EndGameContainer from \"../Containers/EndGameContainer\";\nimport NewPlayerContainer from \"../Containers/NewPlayerContainer\";\nimport HomeScreenButton from \"../Components/HomeScreenButton\";\nimport CurrentPlayerCharacter from \"../Components/CurrentPlayerCharacter\";\n\nclass GameContainer extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tplayers: [],\n\t\t\tcurrentPlayer: { name: \"\" },\n\t\t\tcurrentCharacter: null,\n\t\t\tcurrentEnemy: { alive: true },\n\t\t\tnewCharacterSpriteID: 0,\n\t\t\tcreatedNewPlayer: false,\n\t\t\tplayerIsDefending: false,\n\t\t};\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleCurrentPlayerChange = this.handleCurrentPlayerChange.bind(this);\n\t\tthis.handleNewPlayerForm = this.handleNewPlayerForm.bind(this);\n\t\tthis.setCurrentPlayer = this.setCurrentPlayer.bind(this);\n\t\tthis.playerAttacksEnemy = this.playerAttacksEnemy.bind(this);\n\t\tthis.enemyAttacksPlayer = this.enemyAttacksPlayer.bind(this);\n\t\tthis.playerDefends = this.playerDefends.bind(this);\n\t\tthis.resetEnemy = this.resetEnemy.bind(this);\n\t\tthis.accumulateScore = this.accumulateScore.bind(this);\n\t\tthis.setCurrentHPCharacter = this.setCurrentHPCharacter.bind(this);\n\t\tthis.saveCharacter = this.saveCharacter.bind(this);\n\t}\n\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\t\tconst url = \"http://localhost:8080/avatars\";\n\t\tconst newCharacter = {\n\t\t\tname: event.target.name.value,\n\t\t\tmaxHP: event.target.hp.value,\n\t\t\tcurrentHP: event.target.hp.value,\n\t\t\tpower: event.target.power.value,\n\t\t\tspriteID: event.target.spriteID.value,\n\t\t\talive: true,\n\t\t\tscore: 0,\n\t\t\tplayer: this.state.currentPlayer._links.player.href,\n\t\t};\n\t\tthis.setState({ currentCharacter: newCharacter });\n\t\tconst headers = { \"Content-Type\": \"application/json\" };\n\t\tfetch(url, {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(newCharacter),\n\t\t\theaders: headers,\n\t\t});\n\t}\n\n\thandleNewPlayerForm(event) {\n\t\tevent.preventDefault();\n\t\tconst url = \"http://localhost:8080/players\";\n\t\tconst newPlayer = { name: event.target.name.value };\n\t\tconst headers = { \"Content-Type\": \"application/json\" };\n\t\tfetch(url, {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(newPlayer),\n\t\t\theaders: headers,\n\t\t});\n\t\tthis.setState({ createdNewPlayer: true });\n\t}\n\n\tsetCurrentPlayer(index) {\n\t\tthis.setState({ currentPlayer: this.state.players[index] });\n\t}\n\n\thandleCurrentPlayerChange(event) {\n\t\tconst playerIndex = event.target.value - 1;\n\t\tconsole.log(playerIndex);\n\t\tthis.setState({ currentPlayer: this.state.players[playerIndex] });\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (this.state.createdNewPlayer === true) {\n\t\t\tfetch(\"http://localhost:8080/players\")\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(existingPlayers =>\n\t\t\t\t\tthis.setState({ players: existingPlayers._embedded.players })\n\t\t\t\t)\n\t\t\t\t.then(err => console.error);\n\t\t\tthis.setState({ createdNewPlayer: false });\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(\"http://localhost:8080/players\")\n\t\t\t.then(res => res.json())\n\t\t\t.then(existingPlayers =>\n\t\t\t\tthis.setState({ players: existingPlayers._embedded.players })\n\t\t\t)\n\t\t\t.then(err => console.error);\n\n\t\tfetch(\"http://localhost:8080/avatars/1\")\n\t\t\t.then(res => res.json())\n\t\t\t.then(avatar => this.setState({ currentCharacter: avatar }))\n\t\t\t.then(err => console.error);\n\n\t\tfetch(\"http://localhost:8080/enemies/1\")\n\t\t\t.then(res => res.json())\n\t\t\t.then(enemy => this.setState({ currentEnemy: enemy }))\n\t\t\t.then(err => console.error);\n\t}\n\n\tplayerAttacksEnemy() {\n\t\tthis.setState({ playerIsDefending: false });\n\n\t\tconst power = this.state.currentCharacter.power;\n\t\tif (!(this.state.currentEnemy.currentHP - power <= 0)) {\n\t\t\tthis.setState(prevState => {\n\t\t\t\tconst currentEnemy = { ...prevState.currentEnemy };\n\t\t\t\tcurrentEnemy.currentHP -= power;\n\t\t\t\treturn { currentEnemy };\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState(prevState => {\n\t\t\t\tconst currentEnemy = { ...prevState.currentEnemy };\n\t\t\t\tcurrentEnemy.alive = false;\n\t\t\t\treturn { currentEnemy };\n\t\t\t});\n\t\t}\n\t}\n\n\tresetEnemy() {\n\t\tthis.setState(prevState => {\n\t\t\tconst currentEnemy = { ...prevState.currentEnemy };\n\t\t\tcurrentEnemy.currentHP = currentEnemy.maxHP;\n\t\t\tcurrentEnemy.alive = true;\n\t\t\treturn { currentEnemy };\n\t\t});\n\t}\n\n\tsetCurrentHPCharacter() {\n\t\tthis.setState(prevState => {\n\t\t\tconst currentCharacter = { ...prevState.currentCharacter };\n\t\t\tcurrentCharacter.currentHP = 0;\n\t\t\treturn { currentCharacter };\n\t\t});\n\t}\n\n\taccumulateScore() {\n\t\tthis.setState(prevState => {\n\t\t\tconst currentCharacter = { ...prevState.currentCharacter };\n\t\t\tcurrentCharacter.score += 500;\n\t\t\treturn { currentCharacter };\n\t\t});\n\t}\n\n\tenemyAttacksPlayer() {\n\t\tlet power = 0;\n\t\tif (this.state.currentEnemy.currentHP <= 70) {\n\t\t\tpower = this.state.currentEnemy.power + 30;\n\t\t}\n\n\t\tif (!this.state.playerIsDefending) {\n\t\t\tpower = this.state.currentEnemy.power;\n\t\t} else {\n\t\t\tpower = this.state.currentEnemy.power - 20;\n\t\t}\n\n\t\tif (!(this.state.currentCharacter.currentHP - power <= 0)) {\n\t\t\tthis.setState(prevState => {\n\t\t\t\tconst currentCharacter = { ...prevState.currentCharacter };\n\t\t\t\tcurrentCharacter.currentHP -= power;\n\t\t\t\treturn { currentCharacter };\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState(prevState => {\n\t\t\t\tconst currentCharacter = { ...prevState.currentCharacter };\n\t\t\t\tcurrentCharacter.alive = false;\n\t\t\t\tthis.saveCharacter();\n\n\t\t\t\treturn { currentCharacter };\n\t\t\t});\n\t\t}\n\t}\n\n\tplayerDefends() {\n\t\tthis.setState({ playerIsDefending: true });\n\n\t\tconst power = this.state.currentCharacter.power;\n\t\tif (!(this.state.currentEnemy.currentHP - (power - 30) <= 0)) {\n\t\t\tthis.setState(prevState => {\n\t\t\t\tconst currentEnemy = { ...prevState.currentEnemy };\n\t\t\t\tcurrentEnemy.currentHP -= power - 30;\n\t\t\t\treturn { currentEnemy };\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState(prevState => {\n\t\t\t\tconst currentEnemy = { ...prevState.currentEnemy };\n\t\t\t\tcurrentEnemy.alive = false;\n\t\t\t\tthis.saveCharacter();\n\t\t\t\treturn { currentEnemy };\n\t\t\t});\n\t\t}\n\t}\n\n\tsaveCharacter() {\n\t\tconst url = `http://localhost:8080/avatars`;\n\t\tconst newCharacter = this.state.currentCharacter;\n\t\tconst headers = { \"Content-Type\": \"application/json\" };\n\t\tfetch(url, {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(newCharacter),\n\t\t\theaders: headers,\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<Fragment>\n\t\t\t\t\t<Route exact path=\"/\" component={StartScreenContainer} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/select-player\"\n\t\t\t\t\t\trender={props => (\n\t\t\t\t\t\t\t<NewPlayerContainer\n\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\tplayers={this.state.players}\n\t\t\t\t\t\t\t\tcurrentPlayer={this.state.currentPlayer}\n\t\t\t\t\t\t\t\tchangePlayer={this.handleCurrentPlayerChange}\n\t\t\t\t\t\t\t\thandleSubmit={this.handleNewPlayerForm}\n\t\t\t\t\t\t\t\thandleNameChange={this.handlePlayerNameChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/new-character\"\n\t\t\t\t\t\trender={props => (\n\t\t\t\t\t\t\t<NewCharacterContainer\n\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\tcurrentPlayer={this.state.currentPlayer}\n\t\t\t\t\t\t\t\tspriteID={this.state.newCharacterSpriteID}\n\t\t\t\t\t\t\t\thandleClick={this.handleClick}\n\t\t\t\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/select-character-create-character\"\n\t\t\t\t\t\tcomponent={PlayerSelectCharacterContainer}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/battle\"\n\t\t\t\t\t\trender={props => (\n\t\t\t\t\t\t\t<BattleContainer\n\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\tcurrentPlayer={this.state.currentPlayer}\n\t\t\t\t\t\t\t\tcurrentCharacter={this.state.currentCharacter}\n\t\t\t\t\t\t\t\tcurrentEnemy={this.state.currentEnemy}\n\t\t\t\t\t\t\t\tresetEnemy={this.resetEnemy}\n\t\t\t\t\t\t\t\taccumulateScore={this.accumulateScore}\n\t\t\t\t\t\t\t\tsetCurrentHPCharacter={this.setCurrentHPCharacter}\n\t\t\t\t\t\t\t\tplayerAttacksEnemy={this.playerAttacksEnemy}\n\t\t\t\t\t\t\t\tenemyAttacksPlayer={this.enemyAttacksPlayer}\n\t\t\t\t\t\t\t\tplayerDefends={this.playerDefends}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path=\"/\" component={HomeScreenButton} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/endgame\"\n\t\t\t\t\t\trender={props => (\n\t\t\t\t\t\t\t<EndGameContainer\n\t\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t\t\tcurrentCharacter={this.state.currentCharacter}\n\t\t\t\t\t\t\t\tcurrentPlayer={this.state.currentPlayer}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<CurrentPlayerCharacter\n\t\t\t\t\t\tcurrentPlayer={this.state.currentPlayer}\n\t\t\t\t\t\tcurrentCharacter={this.state.currentCharacter}\n\t\t\t\t\t/>\n\t\t\t\t</Fragment>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default GameContainer;\n"]},"metadata":{},"sourceType":"module"}