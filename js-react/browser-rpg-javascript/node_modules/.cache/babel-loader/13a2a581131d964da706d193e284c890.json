{"ast":null,"code":"var _jsxFileName = \"/Users/user/codeclan_work/Projects/browser-rpg/js-react/browser-rpg-javascript/src/Game/GameContainer.js\";\nimport React, { Component, Fragment } from 'react';\nimport StartScreenContainer from '../Containers/StartScreenContainer';\nimport NewCharacterContainer from '../Containers/NewCharacterContainer';\nimport PlayerSelectCharacterContainer from '../Containers/PlayerSelectCharacterContainer';\nimport BattleContainer from '../Containers/BattleContainer';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport NewPlayerContainer from '../Containers/NewPlayerContainer';\n\nclass GameContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: [],\n      currentPlayer: null,\n      currentCharacter: null,\n      currentEnemy: null,\n      newCharacterName: '',\n      newCharacterSpriteID: 0\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleCurrentPlayerChange = this.handleCurrentPlayerChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const url = 'http://localhost:8080/characters';\n    const newCharacter = {\n      name: event.target.name.value\n    };\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(newCharacter),\n      headers: headers\n    });\n  }\n\n  handleClick(event) {\n    this.setState({\n      newCharacterSpriteID: event.target.id\n    });\n  }\n\n  handleNameChange(event) {\n    this.setState({\n      newCharacterName: event.target.value\n    });\n  }\n\n  handleCurrentPlayerChange(event) {\n    const playerID = event.target.value;\n    fetch(\"http://localhost:8080/players/\".concat(playerID)).then(res => res.json()).then(player => this.setState({\n      currentPlayer: player\n    })).then(err => console.error);\n    console.log(this.state.currentPlayer);\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/players\").then(res => res.json()).then(existingPlayers => this.setState({\n      players: existingPlayers._embedded.players\n    })).then(err => console.error);\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: StartScreenContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/new-character\",\n      render: props => React.createElement(NewCharacterContainer, Object.assign({}, props, {\n        spriteID: this.state.newCharacterSpriteID,\n        name: this.state.newCharacterName,\n        handleClick: this.handleClick,\n        handleNameChange: this.handleNameChange,\n        handleSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/select-character-create-character\",\n      component: PlayerSelectCharacterContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/select-player\",\n      render: props => React.createElement(NewPlayerContainer, Object.assign({}, props, {\n        players: this.state.players,\n        changePlayer: this.handleCurrentPlayerChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/battle\",\n      component: BattleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default GameContainer;","map":{"version":3,"sources":["/Users/user/codeclan_work/Projects/browser-rpg/js-react/browser-rpg-javascript/src/Game/GameContainer.js"],"names":["React","Component","Fragment","StartScreenContainer","NewCharacterContainer","PlayerSelectCharacterContainer","BattleContainer","BrowserRouter","Router","Route","NewPlayerContainer","GameContainer","constructor","props","state","players","currentPlayer","currentCharacter","currentEnemy","newCharacterName","newCharacterSpriteID","handleSubmit","bind","handleClick","handleNameChange","handleCurrentPlayerChange","event","preventDefault","url","newCharacter","name","target","value","headers","fetch","method","body","JSON","stringify","setState","id","playerID","then","res","json","player","err","console","error","log","componentDidMount","existingPlayers","_embedded","render"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react'\nimport StartScreenContainer from '../Containers/StartScreenContainer'\nimport NewCharacterContainer from '../Containers/NewCharacterContainer'\nimport PlayerSelectCharacterContainer from '../Containers/PlayerSelectCharacterContainer'\nimport BattleContainer from '../Containers/BattleContainer'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport NewPlayerContainer from '../Containers/NewPlayerContainer';\n\n\nclass GameContainer extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            players: [],\n            currentPlayer: null,\n            currentCharacter: null,\n            currentEnemy: null,\n            newCharacterName: '',\n            newCharacterSpriteID: 0\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleClick = this.handleClick.bind(this)\n        this.handleNameChange = this.handleNameChange.bind(this)\n        this.handleCurrentPlayerChange = this.handleCurrentPlayerChange.bind(this)\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const url = 'http://localhost:8080/characters'\n        const newCharacter = { name: event.target.name.value, }\n        const headers = { 'Content-Type': 'application/json' }\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(newCharacter),\n            headers: headers\n        })\n\n    }\n    handleClick(event) {\n        this.setState({ newCharacterSpriteID: event.target.id })\n    }\n\n    handleNameChange(event) {\n        this.setState({ newCharacterName: event.target.value })\n    }\n\n    handleCurrentPlayerChange(event){\n        const playerID = event.target.value;\n        fetch(`http://localhost:8080/players/${playerID}`)\n            .then(res => res.json())\n            .then(player => this.setState({ currentPlayer: player }))\n            .then(err => console.error)\n        console.log(this.state.currentPlayer)   \n    }\n\n    componentDidMount(){\n        fetch(\"http://localhost:8080/players\")\n            .then(res => res.json())\n            .then(existingPlayers => this.setState({ players: existingPlayers._embedded.players }))\n            .then(err => console.error)\n    }\n\n    render(){\n        return(\n            <Router>\n                <Fragment>\n                    <Route exact path=\"/\" component={StartScreenContainer} />\n                    <Route exact path=\"/new-character\" \n                        render={(props) => \n                        <NewCharacterContainer {...props} \n                        spriteID={this.state.newCharacterSpriteID} \n                        name={this.state.newCharacterName} \n                        handleClick={this.handleClick} \n                        handleNameChange={this.handleNameChange} \n                        handleSubmit={this.handleSubmit}\n                        />}\n                        />\n                    <Route exact path=\"/select-character-create-character\" component={PlayerSelectCharacterContainer} />\n                    <Route exact path=\"/select-player\" \n                        render={(props) => <NewPlayerContainer {...props} players={this.state.players} changePlayer={this.handleCurrentPlayerChange}/>}\n                        />\n                    <Route exact path=\"/battle\" component={BattleContainer} />\n                </Fragment>\n            </Router>\n        )\n    }\n\n\n}\n\nexport default GameContainer"]},"metadata":{},"sourceType":"module"}