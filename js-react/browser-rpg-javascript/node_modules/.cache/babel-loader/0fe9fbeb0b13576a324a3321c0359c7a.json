{"ast":null,"code":"var _jsxFileName = \"/Users/user/codeclan_work/Projects/browser-rpg/js-react/browser-rpg-javascript/src/Game/GameContainer.js\";\nimport React, { Component, Fragment } from 'react';\nimport StartScreenContainer from '../Containers/StartScreenContainer';\nimport NewCharacterContainer from '../Containers/NewCharacterContainer';\nimport PlayerSelectCharacterContainer from '../Containers/PlayerSelectCharacterContainer';\nimport BattleContainer from '../Containers/BattleContainer';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport EndGameContainer from '../Containers/EndGameContainer';\nimport NewPlayerContainer from '../Containers/NewPlayerContainer';\n\nclass GameContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: [],\n      currentPlayer: {\n        name: ''\n      },\n      currentCharacter: {\n        currentHP: 0\n      },\n      currentEnemy: {\n        currentHP: 0\n      },\n      newCharacterName: '',\n      newCharacterSpriteID: 0,\n      newPlayerName: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleCurrentPlayerChange = this.handleCurrentPlayerChange.bind(this);\n    this.handleNewPlayerForm = this.handleNewPlayerForm.bind(this);\n    this.handlePlayerNameChange = this.handlePlayerNameChange.bind(this);\n    this.setCurrentPlayer = this.setCurrentPlayer.bind(this);\n    this.playerAttacksEnemy = this.playerAttacksEnemy.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const url = 'http://localhost:8080/avatars';\n    const newCharacter = {\n      name: event.target.name.value,\n      player: this.state.currentPlayer._links.player.href\n    };\n    console.log(newCharacter);\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(newCharacter),\n      headers: headers\n    });\n  }\n\n  handleClick(event) {\n    this.setState({\n      newCharacterSpriteID: event.target.id\n    });\n  }\n\n  handleNameChange(event) {\n    this.setState({\n      newCharacterName: event.target.value\n    });\n  }\n\n  handlePlayerNameChange(event) {\n    this.setState({\n      newPlayerName: event.target.value\n    });\n  }\n\n  handleNewPlayerForm(event) {\n    event.preventDefault();\n    const url = 'http://localhost:8080/players';\n    const newPlayer = {\n      name: event.target.name.value\n    };\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(newPlayer),\n      headers: headers\n    });\n  }\n\n  setCurrentPlayer(index) {\n    this.setState({\n      currentPlayer: this.state.players[index]\n    });\n  }\n\n  handleCurrentPlayerChange(event) {\n    const playerIndex = event.target.value - 1;\n    console.log(playerIndex);\n    this.setState({\n      currentPlayer: this.state.players[playerIndex]\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.players.length != this.state.players.length) {\n      fetch(\"http://localhost:8080/players\").then(res => res.json()).then(existingPlayers => this.setState({\n        players: existingPlayers._embedded.players\n      })).then(err => console.error);\n    }\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8080/players/1\").then(res => res.json()).then(player => this.setState({\n      currentPlayer: player\n    })).then(err => console.error);\n    fetch(\"http://localhost:8080/avatars/1\").then(res => res.json()).then(avatar => this.setState({\n      currentCharacter: avatar\n    })).then(err => console.error);\n    fetch(\"http://localhost:8080/enemies/1\").then(res => res.json()).then(enemy => this.setState({\n      currentEnemy: enemy\n    })).then(err => console.error);\n  }\n\n  playerAttacksEnemy() {\n    const power = this.state.currentCharacter.power;\n    this.setState({\n      currentEnemy: {\n        currentHP: this.State.currentEnemy.currentHP -= power\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: StartScreenContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/new-character\",\n      render: props => React.createElement(NewCharacterContainer, Object.assign({}, props, {\n        spriteID: this.state.newCharacterSpriteID,\n        name: this.state.newCharacterName,\n        handleClick: this.handleClick,\n        handleNameChange: this.handleNameChange,\n        handleSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/select-character-create-character\",\n      component: PlayerSelectCharacterContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/select-player\",\n      render: props => React.createElement(NewPlayerContainer, Object.assign({}, props, {\n        players: this.state.players,\n        changePlayer: this.handleCurrentPlayerChange,\n        handleSubmit: this.handleNewPlayerForm,\n        handleNameChange: this.handlePlayerNameChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/battle\",\n      render: props => React.createElement(BattleContainer, Object.assign({}, props, {\n        character: this.state.currentCharacter,\n        enemy: this.state.currentEnemy,\n        playerAttacksEnemy: this.playerAttacksEnemy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/endgame\",\n      component: EndGameContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default GameContainer;","map":{"version":3,"sources":["/Users/user/codeclan_work/Projects/browser-rpg/js-react/browser-rpg-javascript/src/Game/GameContainer.js"],"names":["React","Component","Fragment","StartScreenContainer","NewCharacterContainer","PlayerSelectCharacterContainer","BattleContainer","BrowserRouter","Router","Route","EndGameContainer","NewPlayerContainer","GameContainer","constructor","props","state","players","currentPlayer","name","currentCharacter","currentHP","currentEnemy","newCharacterName","newCharacterSpriteID","newPlayerName","handleSubmit","bind","handleClick","handleNameChange","handleCurrentPlayerChange","handleNewPlayerForm","handlePlayerNameChange","setCurrentPlayer","playerAttacksEnemy","event","preventDefault","url","newCharacter","target","value","player","_links","href","console","log","headers","fetch","method","body","JSON","stringify","setState","id","newPlayer","index","playerIndex","componentDidUpdate","prevProps","prevState","length","then","res","json","existingPlayers","_embedded","err","error","componentDidMount","avatar","enemy","power","State","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,oBAAP,MAAiC,oCAAjC;AACA,OAAOC,qBAAP,MAAkC,qCAAlC;AACA,OAAOC,8BAAP,MAA2C,8CAA3C;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;;AAGA,MAAMC,aAAN,SAA4BX,SAA5B,CAAqC;AAEjCY,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,aAAa,EAAE;AAACC,QAAAA,IAAI,EAAC;AAAN,OAFN;AAGTC,MAAAA,gBAAgB,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX,OAHT;AAITC,MAAAA,YAAY,EAAE;AAACD,QAAAA,SAAS,EAAC;AAAX,OAJL;AAKTE,MAAAA,gBAAgB,EAAE,EALT;AAMTC,MAAAA,oBAAoB,EAAE,CANb;AAOTC,MAAAA,aAAa,EAAE;AAPN,KAAb;AASA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKG,yBAAL,GAAiC,KAAKA,yBAAL,CAA+BH,IAA/B,CAAoC,IAApC,CAAjC;AACA,SAAKI,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBJ,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKK,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BL,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKM,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBN,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKO,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBP,IAAxB,CAA6B,IAA7B,CAA1B;AACH;;AAEDD,EAAAA,YAAY,CAACS,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,GAAG,GAAG,+BAAZ;AACA,UAAMC,YAAY,GAAG;AAAEnB,MAAAA,IAAI,EAAEgB,KAAK,CAACI,MAAN,CAAapB,IAAb,CAAkBqB,KAA1B;AAAiCC,MAAAA,MAAM,EAAE,KAAKzB,KAAL,CAAWE,aAAX,CAAyBwB,MAAzB,CAAgCD,MAAhC,CAAuCE;AAAhF,KAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AAEA,UAAMQ,OAAO,GAAG;AAAE,sBAAgB;AAAlB,KAAhB;AACAC,IAAAA,KAAK,CAACV,GAAD,EAAM;AACPW,MAAAA,MAAM,EAAE,MADD;AAEPC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,YAAf,CAFC;AAGPQ,MAAAA,OAAO,EAAEA;AAHF,KAAN,CAAL;AAKH;;AAEDlB,EAAAA,WAAW,CAACO,KAAD,EAAQ;AACf,SAAKiB,QAAL,CAAc;AAAE5B,MAAAA,oBAAoB,EAAEW,KAAK,CAACI,MAAN,CAAac;AAArC,KAAd;AACH;;AAEDxB,EAAAA,gBAAgB,CAACM,KAAD,EAAQ;AACpB,SAAKiB,QAAL,CAAc;AAAE7B,MAAAA,gBAAgB,EAAEY,KAAK,CAACI,MAAN,CAAaC;AAAjC,KAAd;AACH;;AAEDR,EAAAA,sBAAsB,CAACG,KAAD,EAAQ;AAC1B,SAAKiB,QAAL,CAAc;AAAE3B,MAAAA,aAAa,EAAEU,KAAK,CAACI,MAAN,CAAaC;AAA9B,KAAd;AACH;;AAEDT,EAAAA,mBAAmB,CAACI,KAAD,EAAQ;AACvBA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,GAAG,GAAG,+BAAZ;AACA,UAAMiB,SAAS,GAAG;AAAEnC,MAAAA,IAAI,EAAEgB,KAAK,CAACI,MAAN,CAAapB,IAAb,CAAkBqB;AAA1B,KAAlB;AACA,UAAMM,OAAO,GAAG;AAAE,sBAAgB;AAAlB,KAAhB;AACAC,IAAAA,KAAK,CAACV,GAAD,EAAM;AACPW,MAAAA,MAAM,EAAE,MADD;AAEPC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeG,SAAf,CAFC;AAGPR,MAAAA,OAAO,EAAEA;AAHF,KAAN,CAAL;AAKH;;AAEDb,EAAAA,gBAAgB,CAACsB,KAAD,EAAO;AACnB,SAAKH,QAAL,CAAc;AAAElC,MAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWC,OAAX,CAAmBsC,KAAnB;AAAjB,KAAd;AACH;;AAEDzB,EAAAA,yBAAyB,CAACK,KAAD,EAAO;AAC5B,UAAMqB,WAAW,GAAGrB,KAAK,CAACI,MAAN,CAAaC,KAAb,GAAqB,CAAzC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYW,WAAZ;AACA,SAAKJ,QAAL,CAAc;AAAClC,MAAAA,aAAa,EAAE,KAAKF,KAAL,CAAWC,OAAX,CAAmBuC,WAAnB;AAAhB,KAAd;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACpC,QAAGA,SAAS,CAAC1C,OAAV,CAAkB2C,MAAlB,IAA4B,KAAK5C,KAAL,CAAWC,OAAX,CAAmB2C,MAAlD,EAAyD;AACrDb,MAAAA,KAAK,CAAC,+BAAD,CAAL,CACKc,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,eAAe,IAAI,KAAKZ,QAAL,CAAc;AAAEnC,QAAAA,OAAO,EAAE+C,eAAe,CAACC,SAAhB,CAA0BhD;AAArC,OAAd,CAF7B,EAGK4C,IAHL,CAGUK,GAAG,IAAItB,OAAO,CAACuB,KAHzB;AAIH;AACJ;;AAEDC,EAAAA,iBAAiB,GAAE;AACfrB,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACKc,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUpB,MAAM,IAAI,KAAKW,QAAL,CAAc;AAAElC,MAAAA,aAAa,EAAEuB;AAAjB,KAAd,CAFpB,EAGKoB,IAHL,CAGUK,GAAG,IAAItB,OAAO,CAACuB,KAHzB;AAKApB,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACKc,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUQ,MAAM,IAAI,KAAKjB,QAAL,CAAc;AAAEhC,MAAAA,gBAAgB,EAAEiD;AAApB,KAAd,CAFpB,EAGKR,IAHL,CAGUK,GAAG,IAAItB,OAAO,CAACuB,KAHzB;AAKApB,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACKc,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUS,KAAK,IAAI,KAAKlB,QAAL,CAAc;AAAE9B,MAAAA,YAAY,EAAEgD;AAAhB,KAAd,CAFnB,EAGKT,IAHL,CAGUK,GAAG,IAAItB,OAAO,CAACuB,KAHzB;AAIH;;AAEDjC,EAAAA,kBAAkB,GAAE;AAChB,UAAMqC,KAAK,GAAG,KAAKvD,KAAL,CAAWI,gBAAX,CAA4BmD,KAA1C;AACA,SAAKnB,QAAL,CACK;AAAC9B,MAAAA,YAAY,EAAE;AAAED,QAAAA,SAAS,EAAE,KAAKmD,KAAL,CAAWlD,YAAX,CAAwBD,SAAxB,IAAqCkD;AAAlD;AAAf,KADL;AAGH;;AAEDE,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAErE,oBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,gBAAlB;AACI,MAAA,MAAM,EAAGW,KAAD,IACR,oBAAC,qBAAD,oBAA2BA,KAA3B;AACA,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWQ,oBADrB;AAEA,QAAA,IAAI,EAAE,KAAKR,KAAL,CAAWO,gBAFjB;AAGA,QAAA,WAAW,EAAE,KAAKK,WAHlB;AAIA,QAAA,gBAAgB,EAAE,KAAKC,gBAJvB;AAKA,QAAA,YAAY,EAAE,KAAKH,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAYI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,oCAAlB;AAAuD,MAAA,SAAS,EAAEpB,8BAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,EAaI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,gBAAlB;AACI,MAAA,MAAM,EAAGS,KAAD,IAAW,oBAAC,kBAAD,oBAAwBA,KAAxB;AACnB,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OADD;AAEnB,QAAA,YAAY,EAAE,KAAKa,yBAFA;AAGnB,QAAA,YAAY,EAAE,KAAKC,mBAHA;AAInB,QAAA,gBAAgB,EAAE,KAAKC,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,EAqBI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AACI,MAAA,MAAM,EAAGjB,KAAD,IAAW,oBAAC,eAAD,oBAAqBA,KAArB;AACnB,QAAA,SAAS,EAAE,KAAKC,KAAL,CAAWI,gBADH;AAEnB,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWM,YAFC;AAGnB,QAAA,kBAAkB,EAAE,KAAKY,kBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBJ,EA4BI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,UAAlB;AAA4B,MAAA,SAAS,EAAEvB,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BJ,CADJ,CADJ;AAkCH;;AA5IgC;;AAiJrC,eAAeE,aAAf","sourcesContent":["import React, {Component, Fragment} from 'react'\nimport StartScreenContainer from '../Containers/StartScreenContainer'\nimport NewCharacterContainer from '../Containers/NewCharacterContainer'\nimport PlayerSelectCharacterContainer from '../Containers/PlayerSelectCharacterContainer'\nimport BattleContainer from '../Containers/BattleContainer'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport EndGameContainer from '../Containers/EndGameContainer';\nimport NewPlayerContainer from '../Containers/NewPlayerContainer';\n\n\nclass GameContainer extends Component{\n\n    constructor(props){\n        super(props)\n        this.state = {\n            players: [],\n            currentPlayer: {name:''},\n            currentCharacter: {currentHP:0},\n            currentEnemy: {currentHP:0},\n            newCharacterName: '',\n            newCharacterSpriteID: 0,\n            newPlayerName: ''\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleClick = this.handleClick.bind(this)\n        this.handleNameChange = this.handleNameChange.bind(this)\n        this.handleCurrentPlayerChange = this.handleCurrentPlayerChange.bind(this)\n        this.handleNewPlayerForm = this.handleNewPlayerForm.bind(this)\n        this.handlePlayerNameChange = this.handlePlayerNameChange.bind(this)\n        this.setCurrentPlayer = this.setCurrentPlayer.bind(this)\n        this.playerAttacksEnemy = this.playerAttacksEnemy.bind(this)\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const url = 'http://localhost:8080/avatars'\n        const newCharacter = { name: event.target.name.value, player: this.state.currentPlayer._links.player.href }\n        console.log(newCharacter);\n        \n        const headers = { 'Content-Type': 'application/json' }\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(newCharacter),\n            headers: headers\n        })\n    }\n\n    handleClick(event) {\n        this.setState({ newCharacterSpriteID: event.target.id })\n    }\n\n    handleNameChange(event) {\n        this.setState({ newCharacterName: event.target.value })\n    }\n\n    handlePlayerNameChange(event) {\n        this.setState({ newPlayerName: event.target.value })\n    }\n\n    handleNewPlayerForm(event) {\n        event.preventDefault();\n\n        const url = 'http://localhost:8080/players'\n        const newPlayer = { name: event.target.name.value }\n        const headers = { 'Content-Type': 'application/json' }\n        fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(newPlayer),\n            headers: headers\n        })\n    }\n\n    setCurrentPlayer(index){\n        this.setState({ currentPlayer: this.state.players[index] })\n    }\n\n    handleCurrentPlayerChange(event){\n        const playerIndex = event.target.value - 1 ;\n        console.log(playerIndex)\n        this.setState({currentPlayer: this.state.players[playerIndex]})\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(prevState.players.length != this.state.players.length){\n            fetch(\"http://localhost:8080/players\")\n                .then(res => res.json())\n                .then(existingPlayers => this.setState({ players: existingPlayers._embedded.players }))\n                .then(err => console.error)\n        }\n    }\n\n    componentDidMount(){\n        fetch(\"http://localhost:8080/players/1\")\n            .then(res => res.json())\n            .then(player => this.setState({ currentPlayer: player }))\n            .then(err => console.error)\n\n        fetch(\"http://localhost:8080/avatars/1\")\n            .then(res => res.json())\n            .then(avatar => this.setState({ currentCharacter: avatar }))\n            .then(err => console.error)\n\n        fetch(\"http://localhost:8080/enemies/1\")\n            .then(res => res.json())\n            .then(enemy => this.setState({ currentEnemy: enemy }))\n            .then(err => console.error)\n    }\n\n    playerAttacksEnemy(){\n        const power = this.state.currentCharacter.power;\n        this.setState(\n             {currentEnemy: { currentHP: this.State.currentEnemy.currentHP -= power}} \n        )\n    }\n\n    render(){\n        return(\n            <Router>\n                <Fragment>\n                    <Route exact path=\"/\" component={StartScreenContainer} />\n                    <Route exact path=\"/new-character\" \n                        render={(props) => \n                        <NewCharacterContainer {...props} \n                        spriteID={this.state.newCharacterSpriteID} \n                        name={this.state.newCharacterName} \n                        handleClick={this.handleClick} \n                        handleNameChange={this.handleNameChange} \n                        handleSubmit={this.handleSubmit}\n                        />}\n                        />\n                    <Route exact path=\"/select-character-create-character\" component={PlayerSelectCharacterContainer} />\n                    <Route exact path=\"/select-player\" \n                        render={(props) => <NewPlayerContainer {...props} \n                        players={this.state.players} \n                        changePlayer={this.handleCurrentPlayerChange} \n                        handleSubmit={this.handleNewPlayerForm}\n                        handleNameChange={this.handlePlayerNameChange}\n                        />}\n                        />\n                    <Route exact path=\"/battle\" \n                        render={(props) => <BattleContainer {...props}\n                        character={this.state.currentCharacter} \n                        enemy={this.state.currentEnemy}\n                        playerAttacksEnemy={this.playerAttacksEnemy}\n                        />}\n                        />\n                    <Route exact path=\"/endgame\"component={EndGameContainer} />\n                </Fragment>\n            </Router>\n        )\n    }\n\n\n}\n\nexport default GameContainer"]},"metadata":{},"sourceType":"module"}